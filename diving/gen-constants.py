#!/usr/bin/python3
#
# Copyright (C) 2017 Calvin Owens <jcalvinowens@gmail.com>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 2 only.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# ------------------------------------------------------------------------------
#
# Internally, the code uses different units than the published constants for
# decompression models do: this script contains a verbatim copy of the published
# constants so they can be easily validated, and converts them to the internal
# units at build time.
#
# Constants are originally from "Understanding M-values" by Erik C. Baker. You
# can find them here:
#
#       1) https://www.frogkick.nl/files/understanding_m-values.pdf
#       2) http://www.tek-dive.com/uploads/M-Values.pdf
#       3) "Deco for Divers" pp. 171-176 (2nd edition, 978-1-905492-29-9)

def printf(fmt, *args):
	print(fmt % args)

def model_cname(name):
	name = name.lower()
	name = name.replace(' ', '_')
	name = name.replace('-', '_')
	return name

def print_compartment(halftime, mvalue, mslope):
	# Convert minutes to seconds
	halftime *= 60

	# Convert surface mvalue in MSW to vaccum mvalue in bar
	mvalue /= 10
	mvalue -= mslope

	printf("\t\t{.halftime = %5.1f, .mvalue = %5.3f, .mslope = %6.4f},",
	       halftime, mvalue, mslope)

def print_model(name, *args):
	printf("static const struct model %s = {", model_cname(name))
	printf("\t.name = \"%s\",", name)
	printf("\t.count = %d,", len(args))
	print("\t.compartments = {")

	for compartment in args:
		print_compartment(*compartment)

	print("\t},")
	print("};\n")

def print_models(models):
	for name, compartments in models:
		print_model(name, *compartments)

	print("const struct model *models[] = {")

	for name, _ in models:
		printf("\t&%s,", model_cname(name))

	print("\tNULL,")
	print("};")

def print_header(hdr, models, ftr):
	print(hdr)
	print_models(models)
	print(ftr)

# (halftime in minutes, sealevel mvalue in MSW, m-slope)
MODELS = [
	("Buhlmann ZH-L16C Nitrogen", [
		(  4.00, 32.40, 1.9082),
		(  5.00, 29.60, 1.7928),
		(  8.00, 25.40, 1.5352),
		( 12.50, 22.50, 1.3847),
		( 18.50, 20.30, 1.2780),
		( 27.00, 18.50, 1.2306),
		( 38.30, 16.90, 1.1857),
		( 54.30, 15.90, 1.1504),
		( 77.00, 15.20, 1.1223),
		(109.00, 14.70, 1.0999),
		(146.00, 14.30, 1.0844),
		(187.00, 14.00, 1.0731),
		(239.00, 13.70, 1.0635),
		(305.00, 13.40, 1.0552),
		(390.00, 13.10, 1.0478),
		(498.00, 12.90, 1.0414),
		(635.00, 12.70, 1.0359),
	]),
	("Buhlmann ZH-L16A Helium", [
		(  1.51, 41.00, 2.3557),
		(  1.88, 37.20, 2.0964),
		(  3.02, 31.20, 1.7400),
		(  4.72, 27.20, 1.5321),
		(  6.99, 24.30, 1.3845),
		( 10.21, 22.40, 1.3189),
		( 14.48, 20.80, 1.2568),
		( 20.53, 19.40, 1.2079),
		( 29.11, 18.20, 1.1692),
		( 41.20, 17.40, 1.1419),
		( 55.19, 16.80, 1.1232),
		( 70.69, 16.40, 1.1115),
		( 90.34, 16.20, 1.1022),
		(115.29, 16.10, 1.0963),
		(147.42, 16.10, 1.0904),
		(118.24, 16.00, 1.0850),
		(240.03, 15.90, 1.0791),
	]),
	("DSAT RDP", [
		(  5.00, 30.42, 1.0000),
		( 10.00, 25.37, 1.0000),
		( 20.00, 20.54, 1.0000),
		( 30.00, 18.34, 1.0000),
		( 40.00, 17.11, 1.0000),
		( 60.00, 15.79, 1.0000),
		( 80.00, 15.11, 1.0000),
		(100.00, 14.69, 1.0000),
		(120.00, 14.41, 1.0000),
		(160.00, 14.06, 1.0000),
		(200.00, 13.84, 1.0000),
		(240.00, 13.69, 1.0000),
		(360.00, 13.45, 1.0000),
		(480.00, 13.33, 1.0000),
	]),
]

HDR = """\
#ifndef __MODEL_CONSTANTS_H__
#define __MODEL_CONSTANTS_H__

/*
 * This file is generated by gen-constants.py, DO NOT EDIT.
 */
"""

FTR = "#endif /* __MODEL_CONSTANTS_H__ */"

if __name__ == "__main__":
    print_header(HDR, MODELS, FTR)
